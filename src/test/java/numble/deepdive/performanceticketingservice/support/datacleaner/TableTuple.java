package numble.deepdive.performanceticketingservice.support.datacleaner;

import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import org.apache.logging.log4j.util.Strings;

import java.lang.reflect.Field;
import java.util.Arrays;

import static numble.deepdive.performanceticketingservice.support.StringUtils.camelToSnake;

public class TableTuple {

    public String name;
    public String id;

    public TableTuple(final String name, final String id) {
        this.name = name;
        this.id = id;
    }

    public static TableTuple of(Class<?> entityType) {

        return new TableTuple(tableName(entityType), id(entityType));
    }

    private static String tableName(final Class<?> entityType) {

        Table table = entityType.getAnnotation(Table.class);
        if (table != null) {
            return table.name();
        }

        return entityName(entityType);
    }

    private static String entityName(Class<?> entityType) {

        String entityTypeName = entityType.getSimpleName();

        return camelToSnake(entityTypeName);
    }

    private static String id(final Class<?> entityType) {

        return Arrays.stream(entityType.getDeclaredFields())
                .filter(field -> field.getAnnotation(Id.class) != null)
                .filter(field -> field.getAnnotation(GeneratedValue.class) != null)
                .map(Field::getName)
                .findAny()
                .orElse(Strings.EMPTY);
    }

    public static boolean isAutoGeneratedId(TableTuple tableTuple) {

        return !tableTuple.id.equals(Strings.EMPTY);
    }
}
